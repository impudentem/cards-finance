// Generated by CoffeeScript 2.0.1
var contact_info, digits_only, inn_date_only, inn_lenght, required_field, text_cyrillic, text_date_only, text_phone_valid;

text_phone_valid = "Введите правильный номер";

text_cyrillic = "Допустимо: кириллица и дефис";

contact_info = "Заполните контактную информацию";

required_field = "Обязательное поле";

digits_only = "Введите целое число";

text_date_only = "Введите дату рождения в формате ДД.ММ.ГГГГ";

inn_lenght = "ИНН должен состоять из 10 символов.";

inn_date_only = "Введите правильный ИНН.";

$(function() {
  var _allSel, _cModal, _eModal, _smsAlertError, _smsModal, inp, remoteID;
  $.validator.addMethod("phone_valid", function(a, b) {
    return !!/^[+]\d{2}\s[(]\d{3}[)]\s\d{3}[\-]\d{2}[\-]\d{2}$/gi.test(a);
  }, text_phone_valid);
  $.validator.addMethod("cyrillic", function(a, b) {
    return !/[^а-яёіїґє-\s]/gi.test(a);
  }, text_cyrillic);
  $.validator.addMethod("date_only", function(a, b) {
    return !!/^\d{2}.\d{2}.\d{4}$/gi.test(a);
  }, text_date_only);
  $.validator.addMethod("inn_valid", function(a, b) {
    var _bd, _innd;
    _bd = $("input[name=\"birthDate\"]").val().split(".");
    _bd = new Date(_bd[2] + "-" + _bd[1] + "-" + _bd[0]);
    _innd = new Date("1900-01-01");
    _innd.setDate(_innd.getDate() + (Number(a.slice(0, 5)) - 1));
    return _bd.getDate() === _innd.getDate();
  }, inn_date_only);
  inp = $("form input.inp, form select.inp");
  inp.each(function() {
    var _i, cyrillic_mask, maxDate, minDate, param;
    _i = $(this);
    if (_i.val()) {
      _i.parents(".input-holder").addClass("filled-input");
    }
    cyrillic_mask = new Inputmask("U{1,64}[ ][U{1,64}]", {
      placeholder: "",
      showMaskOnHover: false,
      greedy: false
    });
    switch (this.name) {
      case "lastName":
        return cyrillic_mask.mask(this);
      case "firstName":
        return cyrillic_mask.mask(this);
      case "phone":
        return _i.inputmask({
          mask: "+38 \\(099\\) 999-99-99",
          greedy: false,
          showMaskOnHover: false
        });
      case "email":
        return _i.inputmask({
          alias: "email",
          greedy: false,
          showMaskOnHover: false
        });
      case "city":
        return cyrillic_mask.mask(this);
      // _i.inputmask
      //   mask: "U{1,64}|(U{1,64} U{1,64})"
      //   greedy: off
      //   showMaskOnHover: off
      case "birthDate":
        minDate = new Date();
        maxDate = new Date();
        maxDate.setFullYear(maxDate.getFullYear() - 18);
        minDate.setFullYear(minDate.getFullYear() - 90);
        param = {
          pos: "bottom",
          format: "DD.MM.YYYY",
          i18n: {
            months: ['Январь', 'Февраль', 'Март', 'Апрель', 'Май', 'Июнь', 'Июль', 'Август', 'Сентябрь', 'Октябрь', 'Ноябрь', 'Декабрь'],
            weekdays: ['Вс', 'Пн', 'Вт', 'Ср', 'Чт', 'Пт', 'Сб']
          },
          minDate: UIkit.Utils.moment(minDate).format("DD.MM.YYYY"),
          maxDate: UIkit.Utils.moment(maxDate).format("DD.MM.YYYY")
        };
        return UIkit.datepicker(_i, param);
      case "identCode":
        return _i.inputmask({
          mask: "9999999999",
          greedy: false,
          showMaskOnHover: false
        });
      default:
        return "";
    }
  });
  _allSel = $("select");
  if (UIkit.support.touch === false) {
    new SelectImpu(_allSel, {
      targetAct: ".uk-button.uk-form-select"
    });
  }
  inp.on("blur, change", function() {
    var _i, _if, _ih;
    _i = $(this);
    _if = _i.parents("form");
    _ih = _i.parents(".input-holder");
    if (_i.val()) {
      _ih.addClass("filled-input");
    } else {
      _ih.removeClass("filled-input");
    }
    return _i.valid();
  });
  remoteID = 0;
  _eModal = UIkit.modal("#error-modal", {
    center: true
  });
  _cModal = UIkit.modal("#complete-modal", {
    center: true
  });
  _smsAlertError = function(_spinn) {
    return UIkit.modal.alert("<h1 class=\"uk-text-danger\">Вами введен неверный код</h1>", {
      labels: {
        "Ok": "Ok"
      }
    }).on({
      "hide.uk.modal": function() {
        return _spinn.toggle();
      }
    });
  };
  _smsModal = function() {
    var _pmpt, _spinn;
    _spinn = $("<div>").addClass("uk-overlay-background uk-overlay-icon uk-overlay-icon-spinner uk-overlay-panel uk-position-z-index");
    _pmpt = UIkit.modal.prompt("<h1>Введите код из SMS</h1><p>На ваш мобильный телефон отправлен SMS-пароль из шести цифр</p>", "", function(newV) {
      var _data;
      // newV = new String newV
      // console.log newV, newV.length
      if (newV.length && newV.length === 6) {
        _spinn.toggle();
        _data = {
          id: remoteID,
          code: newV
        };
        _data = $.param(_data);
        $.ajax({
          url: "http://partner.finline.ua/api/verify/",
          type: "POST",
          data: _data,
          success: function(d) {
            // console.log d
            if (d.sms_status === "serverError") {
              return _smsAlertError(_spinn);
            } else {
              _pmpt.hide();
              return _cModal.show();
            }
          }
        });
      }
      return false;
    }, {
      center: true,
      labels: {
        "Ok": "Отправить",
        "Cancel": "Отмена"
      }
    });
    _pmpt.find(".uk-modal-dialog > div").append(_spinn);
    return _pmpt.find("input[type=\"text\"]").inputmask({
      mask: "999999",
      greedy: false,
      showMaskOnHover: false
    });
  };
  // .on
  //   "show.uk.modal": -> console.log "show"
  //   "hide.uk.modal": -> console.log "hide"
  return $("form").validate({
    rules: {
      firstName: {
        required: true,
        cyrillic: true
      },
      lastName: {
        required: true,
        cyrillic: true
      },
      identCode: {
        required: true,
        digits: true,
        inn_valid: true,
        rangelength: [10, 10]
      },
      city: {
        required: true
      },
      email: {
        required: false
      },
      birthDate: {
        date_only: true,
        required: true
      },
      employment: {
        required: true
      },
      agree_personal: {
        required: true
      },
      phone: {
        required: true,
        phone_valid: true
      }
    },
    messages: {
      firstName: {
        required: required_field
      },
      lastName: {
        required: required_field
      },
      identCode: {
        digits: digits_only,
        rangelength: inn_lenght
      },
      city: {
        required: required_field
      },
      phone: {
        required: required_field
      },
      email: {
        required: required_field
      },
      birthDate: {
        required: required_field
      },
      employment: {
        required: required_field
      },
      agree_personal: {
        required: required_field
      }
    },
    errorClass: "error",
    validClass: "valid",
    errorElement: "span",
    submitHandler: function(evt) {
      var _data, data;
      _data = {
        birthDate: evt.elements.birthDate.value,
        identCode: evt.elements.identCode.value,
        phone: `+380${evt.elements.phone.inputmask.unmaskedvalue()}`,
        firstName: evt.elements.firstName.value,
        lastName: evt.elements.lastName.value,
        employment: evt.elements.employment.value,
        offerCode: evt.elements.offerCode.value,
        city: evt.elements.city.value,
        email: evt.elements.email.value,
        verification: "|6",
        partner: 141
      };
      data = $.param(_data);
      $.ajax({
        // url: "http://partner.finline.ua/api/applyWeb/v2/"
        url: "http://finline.dev/api/apply/",
        // type: "POST"
        type: "GET",
        // dataType: "json"
        data: data,
        beforeSend: function() {
          return $(".uk-overlay-icon-spinner").toggle();
        },
        success: function(d) {
          var base;
          console.log("success", d);
          if (d.error) {
            _eModal.find("p").text(d.error);
            _eModal.show();
          } else {
            remoteID = d.remoteID;
            if (remoteID) {
              _smsModal();
            }
          }
          // _cModal.show()
          evt.reset();
          if (typeof (base = $(evt).validate()).resetForm === "function") {
            base.resetForm();
          }
          inp.each(function() {
            var _i;
            _i = $(this);
            if (this.name === "employment") {
              _i.trigger($.Event("change"), {}, _i);
            }
            return _i.parents(".input-holder").removeClass("filled-input");
          });
          return $(".uk-overlay-icon-spinner").toggle();
        },
        error: function(d) {
          console.log(d);
          return _eModal.show();
        }
      });
      return false;
    }
  });
});
